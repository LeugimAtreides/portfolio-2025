name: Build and Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Example build step (adjust as needed)
      - name: Build Artifact
        run: |
          # Build commands go here, e.g., docker build, zip your project, etc.
          zip -r deploy-files/${{ github.run_id }}.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-files
          path: deploy-files/${{ github.run_id }}.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: deploy-files

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy
        env:
          ELASTIC_BEANSTALK_NAME: miguel-portfolio-app-host
          ELASTIC_BEANSTALK_ENV_NAME: Miguel-portfolio-app-host-env
        run: |
          aws s3 cp "deploy-files/${{ github.run_id }}.zip" s3://elasticbeanstalk-us-east-1-${{ secrets.AWS_ACCOUNT_ID }}/artifact/dotnet-mvc-app/
          aws elasticbeanstalk create-application-version --application-name $ELASTIC_BEANSTALK_NAME --version-label ${{ github.run_id }} --description ${{ github.run_id }} --source-bundle S3Bucket="elasticbeanstalk-us-east-1-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="artifact/miguel-portfolio-app/${{ github.run_id }}.zip"
          aws elasticbeanstalk update-environment --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME --version-label ${{ github.run_id }}
          aws elasticbeanstalk wait environment-updated --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME
